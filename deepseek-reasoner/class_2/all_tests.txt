[features(laptop_nimbusBook,sleek_aluminum_body,high_resolution_retina_display,fast_charging_battery),features(laptop_nimbusBook_Pro,sleek_aluminum_body,high_resolution_retina_display,fast_charging_battery),classified(laptop_nimbusBook,premium_device)],classified(laptop_nimbusBook_Pro,premium_device)
[features(pulseFit,continuous_heart_rate_monitoring,advanced_sleep_analysis),features(pulseFitX,continuous_heart_rate_monitoring,advanced_sleep_analysis),classified(pulseFit,health_focused_device)],classified(pulseFitX,health_focused_device)
[features(vortex,high_resolution_support,ray_tracing_technology),features(vortex_elite,high_resolution_support,ray_tracing_technology),classified(vortex,high_performance_device)],classified(vortex_elite,high_performance_device)
[features(ecowash,energy_efficient_technology,eco_friendly_wash_cycles),features(ecowash_plus,energy_efficient_technology,eco_friendly_wash_cycles),classified(ecowash,eco_friendly_appliance)],classified(ecowash_plus,eco_friendly_appliance)
[features(tablet_novaTab,lightweight_design,responsive_amoled_touch_screen),features(tablet_novaTab2,lightweight_design,responsive_amoled_touch_screen),classified(tablet_novaTab,portable_device)],classified(tablet_novaTab2,portable_device)
[features(titan_x,high_resolution_camera,facial_recognition),features(titan_x_pro,high_resolution_camera,facial_recognition),classified(titan_x,premium_device)],classified(titan_x_pro,premium_device)
[features(smartwatch_chronoFit3,fitness_tracking,water_resistance),features(smartwatch_chronoFit3_Pro,fitness_tracking,water_resistance),classified(smartwatch_chronoFit3,health_oriented_device)],classified(smartwatch_chronoFit3_Pro,health_oriented_device)
[features(connectify,real_time_messaging,group_video_calls),features(connectify_plus,real_time_messaging,group_video_calls),classified(connectify,user_friendly_communication_tool)],classified(connectify_plus,user_friendly_communication_tool)
[features(fitTracker_3_0,real_time_workout_tracking,personalized_training_plans,social_sharing_capabilities),features(fitTracker_4_0,real_time_workout_tracking,personalized_training_plans,social_sharing_capabilities),classified(fitTracker_3_0,advanced_health_tool)],classified(fitTracker_4_0,advanced_health_tool)
[features(brewMaster,multiple_brewing_options,built_in_grinder,sleek_stainless_steel_design),features(brewMaster_elite,multiple_brewing_options,built_in_grinder,sleek_stainless_steel_design),classified(brewMaster,premium_brewing_device)],classified(brewMaster_elite,premium_brewing_device)
[adopt(sarah, opinion_respected_to("no manager should resort to micromanagement", managers)), adopt(sarah, opinion_respected_to("defends scrutinizing every minor detail", supervisor)), is_different("no manager should resort to micromanagement", "defends scrutinizing every minor detail"), is_similar(managers, supervisor)], is_using_double_standard(sarah)
[adopt(mark, opinion_respected_to("enforcing strict bedtimes is unfair", others_children)), adopt(mark, opinion_respected_to("adamant about rigid schedule", his_own_kids)), is_different("enforcing strict bedtimes is unfair", "adamant about rigid schedule"), is_similar(others_children, his_own_kids)], is_using_double_standard(mark)
[adopt(emily, opinion_respected_to("condemns plagiarism", "peers_assignments")), adopt(emily, opinion_respected_to("turns a blind eye to similar lapses", "her_own_work")), is_different("condemns plagiarism", "turns a blind eye to similar lapses"), is_similar("peers_assignments", "her_own_work")], is_using_double_standard(emily)
[adopt(daniel, opinion_respected_to("criticizes cutting corners on quality", client_projects)), adopt(daniel, opinion_respected_to("justifies using shortcuts", own_assignments)), is_different("criticizes cutting corners on quality", "justifies using shortcuts"), is_similar(client_projects, own_assignments)], is_using_double_standard(daniel)
[adopt(linda, opinion_respected_to("complain about colleagues overusing technology", "colleagues_meeting_tech_use")), adopt(linda, opinion_respected_to("excuse own phone-checking", "self_meeting_tech_use")), is_different("complain about colleagues overusing technology", "excuse own phone-checking"), is_similar("colleagues_meeting_tech_use", "self_meeting_tech_use")], is_using_double_standard(linda)
[adopt(alex, opinion_respected_to("decried lying in intimate relationships", "intimate relationships")), adopt(alex, opinion_respected_to("dismissed similar deceptions", "business dealings")), is_different("decried lying in intimate relationships", "dismissed similar deceptions"), is_similar("intimate relationships", "business dealings")], is_using_double_standard(alex)
[adopt(michael, opinion_respected_to("must be held accountable for waste management", "large corporations")), adopt(michael, opinion_respected_to("brushed aside calls for personal accountability", "household recycling")), is_different("must be held accountable for waste management", "brushed aside calls for personal accountability"), is_similar("large corporations", "household recycling")], is_using_double_standard(michael)
[adopt(rachel, opinion_respected_to("lambasts_residents_for_noisy_parties", others_parties)), adopt(rachel, opinion_respected_to("dismisses_own_noisy_parties", own_parties)), is_different("lambasts_residents_for_noisy_parties", "dismisses_own_noisy_parties"), is_similar(others_parties, own_parties)], is_using_double_standard(rachel)
[adopt(tom, opinion_respected_to("insists everyone should stick to disciplined workout routine", "others")), adopt(tom, opinion_respected_to("openly flouted the same regimen", "himself")), is_different("insists everyone should stick to disciplined workout routine", "openly flouted the same regimen"), is_similar("others", "himself")], is_using_double_standard(tom)
[adopt(lisa,opinion_respected_to("condemned aggressive marketing tactics","used by competitors")),adopt(lisa,opinion_respected_to("defended employing the same strategies","her own campaigns")),is_different("condemned aggressive marketing tactics","defended employing the same strategies"),is_similar("used by competitors","her own campaigns")],is_using_double_standard(lisa)
[classification(regular_exerciser,physically_fit),be(person,regular_exerciser)],be(person,physically_fit)
[occured(provides(company,employee_training)),followed(occured(provides(company,employee_training)),improves(employee_performance))],improves(employee_performance)
[occured(follow_recipe(chef)),followed(occured(follow_recipe(chef)),occurs(turn_out_delicious(dish))],occurs(turn_out_delicious(dish))
[occured(action(they)),followed(occured(action(they)),achieves(they,goals))],achieves(they,goals)
[occured(proper_maintenance),followed(occured(proper_maintenance),occurs(run_smoothly))],occurs(run_smoothly)
[occured(A),followed(occured(A),occurs(feel_more_focused(they)))],occurs(feel_more_focused(they))
[occured(rain),followed(occured(rain),wet_streets)],wet_streets
[occured(A),followed(occured(A),improves(academic_performance))],improves(academic_performance)
[occured(implement(city,new_traffic_system)),followed(occured(implement(city,new_traffic_system)),smoother_traffic_flow)],smoother_traffic_flow
[occured(A),followed(occured(A),occurs(improve(cognitive_performance)))],occurs(improve(cognitive_performance))
[would_help(install_brighter_streetlights,public_safety),can_carry_out(city,install_brighter_streetlights),not_too_costly(city,install_brighter_streetlights)],ought_to_carry_out(city,install_brighter_streetlights)
[would_help(regular_exercise,health),can_carry_out(individuals,regular_exercise),not_too_costly(individuals,regular_exercise)],ought_to_carry_out(individuals,regular_exercise)
[would_help(reusable_bags,environment),can_carry_out(shoppers,reusable_bags),not_too_costly(shoppers,reusable_bags)],ought_to_carry_out(shoppers,reusable_bags)
[would_help(provide_clear_instructions,students),can_carry_out(teachers,provide_clear_instructions),not_too_costly(teachers,provide_clear_instructions)],ought_to_carry_out(teachers,provide_clear_instructions)
[would_help(more_recycling_bins,reduce_waste),can_carry_out(communities,more_recycling_bins),not_too_costly(communities,more_recycling_bins)],ought_to_carry_out(communities,more_recycling_bins)
[would_help(regular_check_ups,patients),can_carry_out(doctors,regular_check_ups),not_too_costly(doctors,regular_check_ups)],ought_to_carry_out(doctors,regular_check_ups)
[would_help(install_improved_signage,public),can_carry_out(municipalities,install_improved_signage),not_too_costly(municipalities,install_improved_signage)],ought_to_carry_out(municipalities,install_improved_signage)
[would_help(provide_early_education_programs,children),can_carry_out(schools,provide_early_education_programs),not_too_costly(schools,provide_early_education_programs)],ought_to_carry_out(schools,provide_early_education_programs)
[would_help(organize_team_building_activities,team),can_carry_out(managers,organize_team_building_activities),not_too_costly(managers,organize_team_building_activities)],ought_to_carry_out(managers,organize_team_building_activities)
[would_help(open_communication,team_members),can_carry_out(team_members,open_communication),not_too_costly(team_members,open_communication)],ought_to_carry_out(team_members,open_communication)
[has_property(affection,positive),is_opposite(affection,hatred)],has_property(hatred,opposite_of(positive))
[has_property(order,organization),is_opposite(order,chaos)],has_property(chaos,opposite_of(organization))
[has_property(light,illumination),is_opposite(light,darkness)],has_property(darkness,opposite_of(illumination))
[has_property(patience,endurance),is_opposite(patience,impatience)],has_property(impatience,opposite_of(endurance))
[has_property(beauty,aesthetics),is_opposite(beauty,ugliness)],has_property(ugliness,opposite_of(aesthetics))
[has_property(progression,development),is_opposite(progression,regression)],has_property(regression,opposite_of(development))
[has_property(modesty,modesty),is_opposite(modesty,arrogance)],has_property(arrogance,opposite_of(modesty))
[has_property(knowledge,understanding),is_opposite(knowledge,ignorance)],has_property(ignorance,opposite_of(understanding))
[has_property(forgiveness,mercy),is_opposite(forgiveness,vengeance)],has_property(vengeance,opposite_of(mercy))
[has_property(hope,optimism),is_opposite(hope,despair)],has_property(despair,opposite_of(optimism))
[has_property(susan_cover_letter,vague_generalities),vague_for(vague_generalities,measurable_accomplishments),occurs_in(susan_cover_letter,context_that_requires(measurable_accomplishments))],should_be_rejected(susan_cover_letter)
[has_property(dr_martin_research_proposal,imprecise_phrasing),vague_for(imprecise_phrasing,quantification_of_results),occurs_in(dr_martin_research_proposal,context_that_requires(quantification_of_results))],should_be_rejected(dr_martin_research_proposal)
[has_property(new_dish_offering,flowery_adjectives_omitting_key_details),vague_for(flowery_adjectives_omitting_key_details,clarity_specificity),occurs_in(new_dish_offering,context_that_requires(clarity_specificity))],should_be_rejected(new_dish_offering)
[has_property(carlos_essay,loosely_defined_concepts),vague_for(loosely_defined_concepts,clarity_precision),occurs_in(carlos_essay,context_that_requires(clarity_precision))],should_be_rejected(carlos_essay)
[has_property(architectural_design_proposal,ambiguous_references),vague_for(ambiguous_references,structural_parameters_clarity),occurs_in(architectural_design_proposal,context_that_requires(structural_parameters_clarity))],should_be_rejected(architectural_design_proposal)
[has_property(politician_manifesto,vague_without_specific_policy_measures),vague_for(vague_without_specific_policy_measures,clarity_specificity),occurs_in(politician_manifesto,context_that_requires(clarity_specificity))],should_be_rejected(politician_manifesto)
[has_property(clause,ambiguous_phrase),vague_for(ambiguous_phrase,clear_definition),occurs_in(clause,context_that_requires(clear_definition))],should_be_rejected(clause)
[has_property(software_specification_document,optimal_performance_without_metrics),vague_for(optimal_performance_without_metrics,detailed_metrics),occurs_in(software_specification_document,context_that_requires(detailed_metrics))],should_be_rejected(software_specification_document)
[has_property(critics_review_modern_sculpture,deeply_profound),vague_for(deeply_profound,analytical_insight),occurs_in(critics_review_modern_sculpture,context_that_requires(analytical_insight))],should_be_rejected(critics_review_modern_sculpture)
[has_property(marketing_slogan,unsubstantiated_best_claim),vague_for(unsubstantiated_best_claim,substantiated_claims),occurs_in(marketing_slogan,context_that_requires(substantiated_claims))],should_be_rejected(marketing_slogan)
[everybody_who_is(honest,accept(the_truth)),goal_of(emily,honest)],should(emily,accept(the_truth))
[everybody_who_is(open_minded,accept(different_opinions)),goal_of(mike,open_minded)],should(mike,accept(different_opinions))
[everybody_who_is(patient,accept(delays)),goal_of(maria,patient)],should(maria,accept(delays))
[everybody_who_is(successful,accept(hard_work)),goal_of(olivia,successful)],should(olivia,accept(hard_work))
[everybody_who_is(successful,accept(challenges)),goal_of(mia,successful)],should(mia,accept(challenges))
[everybody_who_is(resilient,accept(setbacks)),goal_of(jake,resilient)],should(jake,accept(setbacks))
[everybody_who_is(gracious,accept(praise)),goal_of(sophia,gracious)],should(sophia,accept(praise))
[everybody_who_is(successful,accept(hard_work)),goal_of(daniel,successful)],should(daniel,accept(hard_work))
[everybody_who_is(inclusive,accept(diversity)),goal_of(lily,inclusive)],should(lily,accept(diversity))
[everybody_who_is(emotionally_mature,accept(uncertainties)),goal_of(noah,emotionally_mature)],should(noah,accept(uncertainties))
[classification(rose,flower),be(red_roses,rose)],be(red_roses,flower)
[classification(suv,car),be(x5,suv)],be(x5,car)
[classification(oak,tree),be(giant_oak,oak)],be(giant_oak,tree)
[classification(novel,book),be(mystery_novels,novel)],be(mystery_novels,book)
[classification(laptop,electronic_device),be(macbook,laptop)],be(macbook,electronic_device)
[classification(dolphin,marine_mammal),be(bottlenose_dolphin,dolphin)],be(bottlenose_dolphin,marine_mammal)
[classification(cetacean,mammal),be(killer_whale,cetacean)],be(killer_whale,mammal)
[classification(piano,musical_instrument),be(grand_piano,piano)],be(grand_piano,musical_instrument)
[classification(bicycle,vehicle),be(mountain_bike,bicycle)],be(mountain_bike,vehicle)
[classification(smartphone,electronic_device),be(iPhone,smartphone)],be(iPhone,electronic_device)
[goal(achieve_technological_advancements),necessary_condition(achieve_technological_advancements,increase_investment(research_and_development))],is_necessary(increase_investment(research_and_development))
[goal(achieve_economic_growth),necessary_condition(achieve_economic_growth,foster_business_friendly_environment)],is_necessary(foster_business_friendly_environment)
[goal(improve_public_health),necessary_condition(improve_public_health,expand_healthcare_infrastructure)],is_necessary(expand_healthcare_infrastructure)
[goal(pursue(advancements,machine_learning)),necessary_condition(pursue(advancements,machine_learning),advance(machine_learning_algorithms))],is_necessary(advance(machine_learning_algorithms))
[goal(protect_data_security),necessary_condition(protect_data_security,implement_robust_encryption_protocols)],is_necessary(implement_robust_encryption_protocols)
[goal(reduce_energy_consumption),necessary_condition(reduce_energy_consumption,promote(energy_efficient_computing))],is_necessary(promote(energy_efficient_computing))
[goal(achieve(efficient_water_management)),necessary_condition(achieve(efficient_water_management),invest(smart_irrigation))],is_necessary(invest(smart_irrigation))
[goal(produce_creative_work),necessary_condition(produce_creative_work,find_inspiration)],is_necessary(find_inspiration)
[goal(win_competition),necessary_condition(win_competition,train_hard)],is_necessary(train_hard)
[goal(improve_chess_skills),necessary_condition(improve_chess_skills,review_chess_theory)],is_necessary(review_chess_theory)
[position_to_know(joseph,health),asserts(joseph,exercising_is_healthy),contain(health,exercising_is_healthy)],exercising_is_healthy
[position_to_know(maria,mathematician),asserts(maria,subset(real_numbers,complex_numbers)),contain(mathematician,subset(real_numbers,complex_numbers))],subset(real_numbers,complex_numbers)
[position_to_know(emily,cell_biology),asserts(emily,has_all(eukaryotic_cells,mitochondria)),contain(cell_biology,has_all(eukaryotic_cells,mitochondria)))],has_all(eukaryotic_cells,mitochondria)
[position_to_know(david,geology),asserts(david,expel(volcanoes,lava)),contain(geology,expel(volcanoes,lava))],expel(volcanoes,lava)
[position_to_know(james,biology),asserts(james,bacterias_are_unicellular_microorganisms),contain(biology,bacterias_are_unicellular_microorganisms)],bacterias_are_unicellular_microorganisms
[position_to_know(george,computer_science),asserts(george,secures(cryptography,data)),contain(computer_science,secures(cryptography,data))],secures(cryptography,data)
[position_to_know(peter,health_science),asserts(peter,causes(smoking,cancer)),contain(health_science,causes(smoking,cancer))],causes(smoking,cancer)
[position_to_know(lisa,economics),asserts(lisa,influences(supply_demand_dynamics,market_prices)),contain(economics,influences(supply_demand_dynamics,market_prices))],influences(supply_demand_dynamics,market_prices)
[position_to_know(mark,architectural_design),asserts(mark,form_follows_function(architectural_design)),contain(architectural_design,form_follows_function(architectural_design))],form_follows_function(architectural_design)
[position_to_know(john,physics),asserts(john,spin(black_holes)),contain(physics,spin(black_holes))],spin(black_holes)