[features(nimbusBook,sleek_aluminum_body,high_resolution_retina_display,fast_charging_battery),features(nimbusBook_Pro,sleek_aluminum_body,high_resolution_retina_display,fast_charging_battery),classified(nimbusBook,premium_device)],classified(nimbusBook_Pro,premium_device)
[features(pulseFit,continuous_heart_rate_monitoring,advanced_sleep_analysis),features(pulseFit_X,continuous_heart_rate_monitoring,advanced_sleep_analysis),classified(pulseFit,health_focused_device)],classified(pulseFit_X,health_focused_device)
[features(gaming_console_vortex,high_resolution_support,ray_tracing_technology),features(gaming_console_vortex_elite,high_resolution_support,ray_tracing_technology),classified(gaming_console_vortex,high_performance_device)],classified(gaming_console_vortex_elite,high_performance_device)
[features(ecowash,energy_efficient_technology,eco_friendly_wash_cycles),features(ecowash_plus,energy_efficient_technology,eco_friendly_wash_cycles),classified(ecowash,eco_friendly_appliance)],classified(ecowash_plus,eco_friendly_appliance)
[features(novaTab,lightweight_design,responsive_AMOLED_touch_screen),features(novaTab2,lightweight_design,responsive_AMOLED_touch_screen),classified(novaTab,portable_device)],classified(novaTab2,portable_device)
[features(titan_x,high_resolution_camera,facial_recognition),features(titan_x_pro,high_resolution_camera,facial_recognition),classified(titan_x,premium_device)],classified(titan_x_pro,premium_device)
[features(smartwatch_chronofit_3,fitness_tracking,water_resistance),features(smartwatch_chronofit_3_pro,fitness_tracking,water_resistance),classified(smartwatch_chronofit_3,health_oriented_device)],classified(smartwatch_chronofit_3_pro,health_oriented_device)
[features(social_media_connectify,real_time_messaging,group_video_calls),features(social_media_connectify_plus,real_time_messaging,group_video_calls),classified(social_media_connectify,user_friendly_communication_tool)],classified(social_media_connectify_plus,user_friendly_communication_tool)
[features(fitness_app_fitTracker_3_0,real_time_workout_tracking,personalized_training_plans,social_sharing_capabilities),features(fitness_app_fitTracker_4_0,real_time_workout_tracking,personalized_training_plans,social_sharing_capabilities),classified(fitness_app_fitTracker_3_0,advanced_health_tool)],classified(fitness_app_fitTracker_4_0,advanced_health_tool)
[features(brewMaster,multiple_brewing_options,built_in_grinder,sleek_stainless_steel_design),features(brewMaster_elite,multiple_brewing_options,built_in_grinder,sleek_stainless_steel_design),classified(brewMaster,premium_brewing_device)],classified(brewMaster_elite,premium_brewing_device)
[adopt(sarah, opinion_respected_to("no micromanagement", "managers")), adopt(sarah, opinion_respected_to("defends scrutiny", "supervisor_habit")), is_different("no micromanagement", "defends scrutiny"), is_similar("managers", "supervisor_habit")], is_using_double_standard(sarah)
[adopt(mark,opinion_respected_to("enforcing strict bedtimes is unfair","others_children")),adopt(mark,opinion_respected_to("adamant on rigid schedule","own_children")),is_different("enforcing strict bedtimes is unfair","adamant on rigid schedule"),is_similar("others_children","own_children")],is_using_double_standard(mark)
[adopt(emily, opinion_respected_to("condemns plagiarism", "peers_assignments")), adopt(emily, opinion_respected_to("turns blind eye", "own_work")), is_different("condemns plagiarism", "turns blind eye"), is_similar("peers_assignments", "own_work")], is_using_double_standard(emily)
[adopt(daniel, opinion_respected_to("criticizes cutting corners on quality", "client projects")), adopt(daniel, opinion_respected_to("justifies using shortcuts", "his own assignments")), is_different("criticizes cutting corners on quality", "justifies using shortcuts"), is_similar("client projects", "his own assignments")], is_using_double_standard(daniel)
[adopt(linda,opinion_respected_to("condemns_technology_overuse","colleagues_meetings")),adopt(linda,opinion_respected_to("excuses_phone_checking","own_meetings_actions")),is_different("condemns_technology_overuse","excuses_phone_checking"),is_similar("colleagues_meetings","own_meetings_actions")],is_using_double_standard(linda)
[adopt(alex, opinion_respected_to("decrying lying", "intimate relationships")), adopt(alex, opinion_respected_to("dismissing deceptions", "business dealings")), is_different("decrying lying", "dismissing deceptions"), is_similar("intimate relationships", "business dealings")], is_using_double_standard(alex)
[adopt(michael, opinion_respected_to("must be held accountable for waste management", "large corporations")), adopt(michael, opinion_respected_to("brushed aside calls for personal accountability", "household recycling")), is_different("must be held accountable for waste management", "brushed aside calls for personal accountability"), is_similar("large corporations", "household recycling")], is_using_double_standard(michael)
[adopt(rachel, opinion_respected_to("condemns noisy parties", "residents' parties")), adopt(rachel, opinion_respected_to("dismisses noisy parties", "her own home parties")), is_different("condemns noisy parties", "dismisses noisy parties"), is_similar("residents' parties", "her own home parties")], is_using_double_standard(rachel)
[adopt(tom, opinion_respected_to("insisted everyone should stick to a disciplined workout routine", "others adherence")), adopt(tom, opinion_respected_to("openly flouted the same regimen for himself", "his own adherence")), is_different("insisted everyone should stick to a disciplined workout routine", "openly flouted the same regimen for himself"), is_similar("others adherence", "his own adherence")], is_using_double_standard(tom)
[adopt(lisa, opinion_respected_to("condemn aggressive marketing tactics", "competitors")), adopt(lisa, opinion_respected_to("defend employing aggressive marketing tactics", "own campaigns")), is_different("condemn aggressive marketing tactics", "defend employing aggressive marketing tactics"), is_similar("competitors", "own campaigns")], is_using_double_standard(lisa)
[occured(exercises_regularly(person)),followed(occured(exercises_regularly(person)),occurs(physically_fit(person)))],occurs(physically_fit(person))
[occured(invests(company,employee_training)),followed(occured(invests(company,employee_training)),occurs(improves(employee_performance))],occurs(improves(employee_performance))
[occured(follow_recipe_accurately),followed(occured(follow_recipe_accurately),turns_out_delicious(dish))],turns_out_delicious(dish)
[occured(collaborate_effectively(team)),followed(occured(collaborate_effectively(team)),achieve(team,their_goals))],achieve(team,their_goals)
[occured(properly_maintained(computer_system)),followed(occured(properly_maintained(computer_system)),runs_smoothly(computer_system))],runs_smoothly(computer_system)
[occured(get_enough_sleep(person)),followed(occured(get_enough_sleep(person)),occurs(feel_more_focused(person)))],occurs(feel_more_focused(person))
[occured(rain),followed(occured(rain),wet(streets))],wet(streets)
[occured(attends(student,classes_regularly)),followed(occured(attends(student,classes_regularly)),occurs(improves(academic_performance)))],occurs(improves(academic_performance))
[occured(well_maintained(road)),followed(occured(well_maintained(road)),smooth_traffic_flow)],smooth_traffic_flow
[occured(got_sufficient_sleep(individual)),followed(occured(got_sufficient_sleep(individual)),occurs(cognitive_performance_will_improve(individual)))],occurs(cognitive_performance_will_improve(individual))
[would_help(brighter_streetlights,neighborhood),can_carry_out(city,brighter_streetlights),not_too_costly(city,brighter_streetlights)],ought_to_carry_out(city,brighter_streetlights)
[would_help(regular_exercise,health),can_carry_out(individuals,regular_exercise),not_too_costly(individuals,regular_exercise)],ought_to_carry_out(individuals,regular_exercise)
[would_help(reusable_bags,environment),can_carry_out(shoppers,reusable_bags),not_too_costly(shoppers,reusable_bags)],ought_to_carry_out(shoppers,reusable_bags)
[would_help(clear_instructions,students),can_carry_out(teachers,clear_instructions),not_too_costly(teachers,clear_instructions)],ought_to_carry_out(teachers,clear_instructions)
[would_help(more_recycling_bins,reduce_waste),can_carry_out(communities,more_recycling_bins),not_too_costly(communities,more_recycling_bins)],ought_to_carry_out(communities,more_recycling_bins)
[would_help(regular_check_ups,maintain_good_health),can_carry_out(doctors,regular_check_ups),not_too_costly(doctors,regular_check_ups)],ought_to_carry_out(doctors,regular_check_ups)
[would_help(improved_signage,drivers),can_carry_out(municipalities,improved_signage),not_too_costly(municipalities,improved_signage)],ought_to_carry_out(municipalities,improved_signage)
[would_help(early_education_programs,children),can_carry_out(schools,early_education_programs),not_too_costly(schools,early_education_programs)],ought_to_carry_out(schools,early_education_programs)
[would_help(team_building_activities,workplace_relationships),can_carry_out(managers,team_building_activities),not_too_costly(managers,team_building_activities)],ought_to_carry_out(managers,team_building_activities)
[would_help(open_communication,resolve_conflicts),can_carry_out(team_members,open_communication),not_too_costly(team_members,open_communication)],ought_to_carry_out(team_members,open_communication)
[has_property(love,affection),is_opposite(love,hatred)],has_property(hatred,opposite_of(affection))
[has_property(order,organization),is_opposite(order,chaos)],has_property(chaos,opposite_of(organization))
[has_property(light,illumination),is_opposite(light,darkness)],has_property(darkness,opposite_of(illumination))
[has_property(patience,endurance),is_opposite(patience,impatience)],has_property(impatience,opposite_of(endurance))
[has_property(beauty,aesthetics),is_opposite(beauty,ugliness)],has_property(ugliness,opposite_of(aesthetics))
[has_property(progress,development),is_opposite(progress,regression)],has_property(regression,opposite_of(development))
[has_property(humility,modesty),is_opposite(humility,arrogance)],has_property(arrogance,opposite_of(modesty))
[has_property(knowledge,understanding),is_opposite(knowledge,ignorance)],has_property(ignorance,opposite_of(understanding))
[has_property(forgiveness,mercy),is_opposite(forgiveness,vengeance)],has_property(vengeance,opposite_of(mercy))
[has_property(hope,optimism),is_opposite(hope,despair)],has_property(despair,opposite_of(optimism))
[has_property(susan_cover_letter,vague_generalities_without_measurable_accomplishments),vague_for(vague_generalities_without_measurable_accomplishments,concrete_evidence_of_skills),occurs_in(susan_cover_letter,context_that_requires(concrete_evidence_of_skills))],should_be_rejected(susan_cover_letter)
[has_property(dr_martin_research_proposal,imprecise_phrasing),vague_for(imprecise_phrasing,measurable_predictions),occurs_in(dr_martin_research_proposal,context_that_requires(measurable_predictions))],should_be_rejected(dr_martin_research_proposal)
[has_property(new_dish,flowery_ambiguous_descriptors),vague_for(flowery_ambiguous_descriptors,detailed_culinary_communication),occurs_in(new_dish,context_that_requires(detailed_culinary_communication))],should_be_rejected(new_dish)
[has_property(carlos_essay,vague_concepts),vague_for(vague_concepts,clarity_precision),occurs_in(carlos_essay,context_that_requires(clarity_precision))],should_be_rejected(carlos_essay)
[has_property(architectural_design_proposal,ambiguous_references),vague_for(ambiguous_references,detailed_design_specifications),occurs_in(architectural_design_proposal,context_that_requires(detailed_design_specifications))],should_be_rejected(architectural_design_proposal)
[has_property(politician_manifesto,vague_promise),vague_for(vague_promise,clear_actionable_plans),occurs_in(politician_manifesto,context_that_requires(clear_actionable_plans))],should_be_rejected(politician_manifesto)
[has_property(legal_clause,ambiguous_phrase),vague_for(ambiguous_phrase,explicit_obligations),occurs_in(legal_clause,context_that_requires(explicit_obligations))],should_be_rejected(legal_clause)
[has_property(software_specification_document,vague_optimal_performance),vague_for(vague_optimal_performance,measurable_performance_standards),occurs_in(software_specification_document,context_that_requires(measurable_performance_standards))],should_be_rejected(software_specification_document)
[has_property(critics_review_modern_sculpture,vague_commentary),vague_for(vague_commentary,detailed_critique),occurs_in(critics_review_modern_sculpture,context_that_requires(detailed_critique))],should_be_rejected(critics_review_modern_sculpture)
[has_property(marketing_slogan,"best_ever_without_data"),vague_for("best_ever_without_data",evidence_backed_assertions),occurs_in(marketing_slogan,context_that_requires(evidence_backed_assertions))],should_be_rejected(marketing_slogan)
[everybody_who_is(honest,accept(truth)),goal_of(emily,honest)],should(emily,accept(truth))
[everybody_who_is(understanding,accept(different_opinions)),goal_of(mike,understanding)],should(mike,accept(different_opinions))
[everybody_who_is(patient,accept(delays)),goal_of(maria,patient)],should(maria,accept(delays))
[everybody_who_is(diligent,accept(hard_work)),goal_of(olivia,diligent)],should(olivia,accept(hard_work))
[everybody_who_is(optimistic,accept(challenges)),goal_of(mia,optimistic)],should(mia,accept(challenges))
[everybody_who_is(resilient,accept(setbacks)),goal_of(jake,resilient)],should(jake,accept(setbacks))
[everybody_who_is(humble,accept(praise)),goal_of(sophia,humble)],should(sophia,accept(praise))
[everybody_who_is(ambitious,accept(hard_work)),goal_of(daniel,ambitious)],should(daniel,accept(hard_work))
[everybody_who_is(tolerant,accept(diversity)),goal_of(lily,tolerant)],should(lily,accept(diversity))
[everybody_who_is(optimistic,accept(uncertainties)),goal_of(noah,optimistic)],should(noah,accept(uncertainties))
[classification(rose,flower),be(red_rose,rose)],be(red_rose,flower)
[classification(bmw,car),be(x5,bmw)],be(x5,car)
[classification(oak_tree,tree),be(giant_oak_park,oak_tree)],be(giant_oak_park,tree)
[classification(novel,book),be(mystery_novels,novel)],be(mystery_novels,book)
[classification(laptop,electronic_device),be(macbook,laptop)],be(macbook,electronic_device)
[classification(dolphin,marine_mammal),be(bottlenose_dolphins,dolphin)],be(bottlenose_dolphins,marine_mammal)
[classification(whale,mammal),be(killer_whale,whale)],be(killer_whale,mammal)
[classification(piano,musical_instrument),be(grand_piano,piano)],be(grand_piano,musical_instrument)
[classification(bicycle,vehicle),be(mountain_bikes,bicycle)],be(mountain_bikes,vehicle)
[classification(smartphone,electronic_device),be(iPhones,smartphone)],be(iPhones,electronic_device)
[goal(bring_about(technological_innovation)),necessary_condition(bring_about(technological_innovation),bring_about(increased_investment_rd))],is_necessary(bring_about(increased_investment_rd))
[goal(pursue(advancing_economic_prosperity)),necessary_condition(pursue(advancing_economic_prosperity),foster(business_friendly_environment))],is_necessary(foster(business_friendly_environment))
[goal(improve_healthcare),necessary_condition(improve_healthcare,expand_healthcare_infrastructure)],is_necessary(expand_healthcare_infrastructure)
[goal(strive_innovation_artificial_intelligence),necessary_condition(strive_innovation_artificial_intelligence,advance_machine_learning_algorithms)],is_necessary(advance_machine_learning_algorithms)
[goal(pursue(progress,cybersecurity)),necessary_condition(pursue(progress,cybersecurity),implement(robust_encryption_protocols))],is_necessary(implement(robust_encryption_protocols))
[goal(advocate(sustainable_tech_practices)),necessary_condition(advocate(sustainable_tech_practices),promote(energy_efficient_computing))],is_necessary(promote(energy_efficient_computeting))
[goal(farming),necessary_condition(farming,invest(smart_irrigation))],is_necessary(invest(smart_irrigation))
[goal(encourage_creativity),necessary_condition(encourage_creativity,find_inspiration)],is_necessary(find_inspiration)
[goal(play_soccer),necessary_condition(play_soccer,train_hard)],is_necessary(train_hard)
[goal(play_chess),necessary_condition(play_chess,review_chess_theory)],is_necessary(review_chess_theory)
[position_to_know(joseph,medicine),asserts(joseph,healthy(exercising)),contain(medicine,healthy(exercising))],healthy(exercising)
[position_to_know(maria,mathematics),asserts(maria,subset(real_numbers,complex_numbers)),contain(mathematics,subset(real_numbers,complex_numbers))],subset(real_numbers,complex_numbers)
[position_to_know(emily,biology),asserts(emily,has_all(eukaryotic_cells,mitochondria)),contain(biology,has_all(eukaryotic_cells,mitochondria))],has_all(eukaryotic_cells,mitochondria)
[position_to_know(david,geology),asserts(david,expel(volcanoes,lava)),contain(geology,expel(volcanoes,lava))],expel(volcanoes,lava)
[position_to_know(james,microbiology),asserts(james,bacterias_are_unicellular_microorganisms),contain(microbiology,bacterias_are_unicellular_microorganisms)],bacterias_are_unicellular_microorganisms
[position_to_know(george,computer_science),asserts(george,secures(cryptography,data)),contain(computer_science,secures(cryptography,data))],secures(cryptography,data)
[position_to_know(peter,medicine),asserts(peter,smoking_causes_cancer),contain(medicine,smoking_causes_cancer)],smoking_causes_cancer
[position_to_know(lisa,economics),asserts(lisa,influences(supply_demand_dynamics,market_prices)),contain(economics,influences(supply_demand_dynamics,market_prices))],influences(supply_demand_dynamics,market_prices)
[position_to_know(mark,architecture),asserts(mark,form_follows_function(architectural_design)),contain(architecture,form_follows_function(architectural_design))],form_follows_function(architectural_design)
[position_to_know(john,physics),asserts(john,spin(black_holes)),contain(physics,spin(black_holes))],spin(black_holes)