[features(nimbusBook,sleek_aluminum_body,high_resolution_retina_display,fast_charging_battery),features(nimbusBook_Pro,sleek_aluminum_body,high_resolution_retina_display,fast_charging_battery),classified(nimbusBook,flagship_device)],classified(nimbusBook_Pro,flagship_device)
[features(pulseFit,continuous_heart_rate_monitoring,advanced_sleep_analysis),features(pulseFitX,continuous_heart_rate_monitoring,advanced_sleep_analysis),classified(pulseFit,premium_fitness_tracker)],classified(pulseFitX,premium_fitness_tracker)
[features(gaming_console_vortex,high_resolution_support,ray_tracing_technology),features(gaming_console_vortex_elite,high_resolution_support,ray_tracing_technology),classified(gaming_console_vortex,high_end_gaming_console)],classified(gaming_console_vortex_elite,high_end_gaming_console)
[features(ecowash,energy_efficient_technology,eco_friendly_wash_cycles),features(ecowash_plus,energy_efficient_technology,eco_friendly_wash_cycles),classified(ecowash,eco_friendly_appliance)],classified(ecowash_plus,eco_friendly_appliance)
[features(novaTab,lightweight_design,responsive_amoled_touch_screen),features(novaTab2,lightweight_design,responsive_amoled_touch_screen),classified(novaTab,flagship_device)],classified(novaTab2,flagship_device)
[features(smartphone_titanX,high_resolution_camera,facial_recognition),features(smartphone_titanX_Pro,high_resolution_camera,facial_recognition),classified(smartphone_titanX,flagship_device)],classified(smartphone_titanX_Pro,flagship_device)
[features(chronoFit3,fitness_tracking,water_resistance),features(chronoFit3_Pro,fitness_tracking,water_resistance),classified(chronoFit3,premium_wearable)],classified(chronoFit3_Pro,premium_wearable)
[features(connectify,real_time_messaging,group_video_calls),features(connectify_plus,real_time_messaging,group_video_calls),classified(connectify,flagship_social_media_platform)],classified(connectify_plus,flagship_social_media_platform)
[features(fitTracker_3_0,real_time_workout_tracking,personalized_training_plans,social_sharing_capabilities),features(fitTracker_4_0,real_time_workout_tracking,personalized_training_plans,social_sharing_capabilities),classified(fitTracker_3_0,flagship_fitness_app)],classified(fitTracker_4_0,flagship_fitness_app)
[features(brewMaster,multiple_brewing_options,built_in_grinder,sleek_stainless_steel_design),features(brewMasterElite,multiple_brewing_options,built_in_grinder,sleek_stainless_steel_design),classified(brewMaster,flagship_coffee_machine)],classified(brewMasterElite,flagship_coffee_machine)
[adopt(sarah, opinion_respected_to("no manager should resort to micromanagement", "managers")), adopt(sarah, opinion_respected_to("defends her supervisor’s scrutiny", "supervisor_scrutiny")), is_different("no manager should resort to micromanagement", "defends her supervisor’s scrutiny"), is_similar("managers", "supervisor_scrutiny")], is_using_double_standard(sarah)
[adopt(mark,opinion_respected_to("enforcing strict bedtimes is unfair","others' children")),adopt(mark,opinion_respected_to("must adhere to rigid schedule","his own kids")),is_different("enforcing strict bedtimes is unfair","must adhere to rigid schedule"),is_similar("others' children","his own kids")],is_using_double_standard(mark)
[adopt(emily, opinion_respected_to("condemns plagiarism", "peers’ assignments")), adopt(emily, opinion_respected_to("turns blind eye", "her own work")), is_different("condemns plagiarism", "turns blind eye"), is_similar("peers’ assignments", "her own work")], is_using_double_standard(emily)
[adopt(daniel, opinion_respected_to("criticizes cutting corners on quality", "client projects")), adopt(daniel, opinion_respected_to("justifies using shortcuts", "his own assignments")), is_different("criticizes cutting corners on quality", "justifies using shortcuts"), is_similar("client projects", "his own assignments")], is_using_double_standard(daniel)
[adopt(linda, opinion_respected_to("complain about overuse of technology", "colleagues during meetings")), adopt(linda, opinion_respected_to("excuse her own phone-checking", "her own meetings")), is_different("complain about overuse of technology", "excuse her own phone-checking"), is_similar("colleagues during meetings", "her own meetings")], is_using_double_standard(linda)
[adopt(alex, opinion_respected_to("decried lying", "intimate relationships")), adopt(alex, opinion_respected_to("dismissed similar deceptions", "business dealings")), is_different("decried lying", "dismissed similar deceptions"), is_similar("intimate relationships", "business dealings")], is_using_double_standard(alex)
[adopt(michael, opinion_respected_to("must be held accountable for waste management", "large corporations")), adopt(michael, opinion_respected_to("brushed aside calls for personal accountability", "household recycling")), is_different("must be held accountable for waste management", "brushed aside calls for personal accountability"), is_similar("large corporations", "household recycling")], is_using_double_standard(michael)
[adopt(rachel, opinion_respected_to("condemns noisy parties", "residents' parties")), adopt(rachel, opinion_respected_to("excuses own noisy parties", "her own parties")), is_different("condemns noisy parties", "excuses own noisy parties"), is_similar("residents' parties", "her own parties")],is_using_double_standard(rachel)
[adopt(tom, opinion_respected_to("demands disciplined routine adherence", "others_workout_routines")), adopt(tom, opinion_respected_to("flouts regimen for self", "own_workout_routine")), is_different("demands disciplined routine adherence", "flouts regimen for self"), is_similar("others_workout_routines", "own_workout_routine")], is_using_double_standard(tom)
[adopt(lisa, opinion_respected_to("condemn aggressive marketing tactics", "used by competitors")), adopt(lisa, opinion_respected_to("defend employing the same strategies", "in her own campaigns")), is_different("condemn aggressive marketing tactics", "defend employing the same strategies"), is_similar("used by competitors", "in her own campaigns")], is_using_double_standard(lisa)
[occured(exercise(person)),followed(occured(exercise(person)),healthy(person))],healthy(person)
[occured(invest(company,employee_training)),followed(occured(invest(company,employee_training)),improves(company,employee_performance))],improves(company,employee_performance)
[occured(follow_accurately(recipe)),followed(occured(follow_accurately(recipe)),occurs(intended_outcome))],occurs(intended_outcome)
[occured(collaborate_effectively(team)),followed(occured(collaborate_effectively(team)),achieve_goals(team))],achieve_goals(team)
[classification(regularly_maintained_system,properly_maintained_system),be(computer_system,regularly_maintained_system)],be(computer_system,properly_maintained_system)
[occured(get_enough_sleep(person)),followed(occured(get_enough_sleep(person)),occurs(feel_more_focused(person))],occurs(feel_more_focused(person))
[occured(cloudy),followed(occured(cloudy),occurs(rain))],occurs(rain)
[occured(attends(student,classes_regularly),followed(occured(attends(student,classes_regularly)),occurs(improves(academic_performance))],occurs(improves(academic_performance))
[classification(well_maintained_road,safe_road),be(this_road,well_maintained_road)],be(this_road,safe_road)
[followed(occured(gets_enough_sleep(X),improves(cognitive_performance(X)))],improves(cognitive_performance(X))
[would_help(brighter_streetlights, neighborhood), can_carry_out(city, brighter_streetlights), not_too_costly(city, brighter_streetlights)], ought_to_carry_out(city, brighter_streetlights)
[would_help(regular_exercise,health),can_carry_out(individuals,regular_exercise),not_too_costly(individuals,regular_exercise)],ought_to_carry_out(individuals,regular_exercise)
[would_help(reusable_bags, environment), can_carry_out(shoppers, reusable_bags), not_too_costly(shoppers, reusable_bags)], ought_to_carry_out(shoppers, reusable_bags)
[would_help(clear_instructions,students),can_carry_out(teachers,clear_instructions),not_too_costly(teachers,clear_instructions)],ought_to_carry_out(teachers,clear_instructions)
[would_help(more_recycling_bins, reduce_waste), can_carry_out(communities, more_recycling_bins), not_too_costly(communities, more_recycling_bins)], ought_to_carry_out(communities, more_recycling_bins)
[would_help(regular_check_ups, maintain_good_health), can_carry_out(doctors, conduct_regular_check_ups), not_too_costly(doctors, conduct_regular_check_ups)], ought_to_carry_out(doctors, conduct_regular_check_ups)
[would_help(improved_signage, drivers), can_carry_out(municipalities, improved_signage), not_too_costly(municipalities, improved_signage)], ought_to_carry_out(municipalities, improved_signage)
[would_help(early_education_programs,children),can_carry_out(schools,early_education_programs),not_too_costly(schools,early_education_programs)],ought_to_carry_out(schools,early_education_programs)
[would_help(team_building_activities, workplace_relationships), can_carry_out(managers, team_building_activities), not_too_costly(managers, team_building_activities)], ought_to_carry_out(managers, team_building_activities)
[would_help(open_communication,resolve_conflicts),can_carry_out(team_members,open_communication),not_too_costly(team_members,open_communication)],ought_to_carry_out(team_members,open_communication) 
[has_property(love,affection),is_opposite(love,hate)],has_property(hate,opposite_of(affection))
[has_property(order,ordered),is_opposite(order,chaos)],has_property(chaos,opposite_of(ordered))
[has_property(light,illumination),is_opposite(light,darkness)],has_property(darkness,opposite_of(illumination))
[has_property(patience,P),is_opposite(patience,impatience)],has_property(impatience,opposite_of(P))
[has_property(beauty,aesthetics),is_opposite(beauty,ugliness)],has_property(ugliness,opposite_of(aesthetics))
[is_opposite(progress,regression)]
[has_property(humility,modesty),is_opposite(humility,arrogance)],has_property(arrogance,opposite_of(modesty))
[has_property(knowledge,valuable),is_opposite(knowledge,ignorance)],has_property(ignorance,opposite_of(valuable))
[has_property(forgiveness,mercy),is_opposite(forgiveness,vengeance)],has_property(vengeance,opposite_of(mercy))
[has_property(hope,positive),is_opposite(hope,despair)],has_property(despair,opposite_of(positive))
[has_property(susan_cover_letter,vague_generalities),vague_for(vague_generalities,measurable_accomplishments),occurs_in(susan_cover_letter,context_that_requires(measurable_accomplishments))],should_be_rejected(susan_cover_letter)
[has_property(dr_martin_proposal,imprecise_phrasing),vague_for(imprecise_phrasing,quantifiable_results),occurs_in(dr_martin_proposal,context_that_requires(quantifiable_results))],should_be_rejected(dr_martin_proposal)
[has_property(new_dish_description,flowery_adjectives_omitting_key_ingredients_preparation),vague_for(flowery_adjectives_omitting_key_ingredients_preparation,clarity_specific_details),occurs_in(new_dish_description,context_that_requires(clarity_specific_details))],should_be_rejected(new_dish_description)
[has_property(carlos_paper,loosely_defined_concepts),vague_for(loosely_defined_concepts,clarity_precision),occurs_in(carlos_paper,context_that_requires(clarity_precision))],should_be_rejected(carlos_paper)
[has_property(architectural_design_proposal,ambiguous_references),vague_for(ambiguous_references,structural_parameters),occurs_in(architectural_design_proposal,context_that_requires(structural_parameters))],should_be_rejected(architectural_design_proposal)
[has_property(politician_manifesto, lack_of_specific_policy_measures), vague_for(lack_of_specific_policy_measures, clarity_policy_details), occurs_in(politician_manifesto, context_that_requires(clarity_policy_details))], should_be_rejected(politician_manifesto)
[has_property(legal_contract_clause,ambiguous_phrase),vague_for(ambiguous_phrase,precise_definitions),occurs_in(legal_contract_clause,context_that_requires(precise_definitions))],should_be_rejected(legal_contract_clause)
[has_property(software_specification_document,ambiguous_descriptors),vague_for(ambiguous_descriptors,clarity_precision),occurs_in(software_specification_document,context_that_requires(clarity_precision))],should_be_rejected(software_specification_document)
[has_property(critics_review,deeply_profound),vague_for(deeply_profound,analytical_insight),occurs_in(critics_review,context_that_requires(analytical_insight))],should_be_rejected(critics_review)
[has_property(marketing_slogan,"best_ever"),vague_for("best_ever",substantiated_claims),occurs_in(marketing_slogan,context_that_requires(substantiated_claims))],should_be_rejected(marketing_slogan)
[everybody_who_is(honest,accept(truth)),goal_of(X,honest)],should(X,accept(truth))
[everybody_who_is(understanding,accept(forgiveness)),goal_of(mike,understanding)],should(mike,accept(forgiveness))
[everybody_who_is(patient,accept(delays)),goal_of(X,patient)],should(X,accept(delays))
[everybody_who_is(diligent,accept(P)),goal_of(olivia,diligent)],should(olivia,accept(P))
[everybody_who_is(optimistic,accept(challenges)),goal_of(X,optimistic)],should(X,accept(challenges))
[everybody_who_is(resilient,accept(P)),goal_of(jake,resilient)],should(jake,accept(P))
[everybody_who_is(humble,accept(praise)),goal_of(X,humble)],should(X,accept(praise))
[everybody_who_is(ambitious,accept(P)),goal_of(daniel,ambitious)],should(daniel,accept(P))
[everybody_who_is(tolerant,accept(diversity)),goal_of(X,tolerant)],should(X,accept(diversity))
[everybody_who_is(optimistic,accept(practice_positive_thinking)),goal_of(noah,optimistic)],should(noah,accept(practice_positive_thinking))
[classification(rose,flower),be(red_rose,rose)],be(red_rose,flower)
[classification(bmw,car),be(x5_model,bmw)],be(x5_model,car)
[classification(oak_tree,tree),be(an_oak_tree,oak_tree)],be(an_oak_tree,tree)
[classification(mystery_novel,novel),be(A,mystery_novel)],be(A,novel)
[classification(laptop,electronic_device),be(A,laptop)],be(A,electronic_device)
[classification(dolphin,mammal),be(bottlenose_dolphin,dolphin)],be(bottlenose_dolphin,mammal)
[classification(whale,mammal),be(whale_instance,whale)],be(whale_instance,mammal)
[classification(grand_piano,piano),be(grand_piano,grand_piano)],be(grand_piano,piano)
[classification(bicycle,vehicle),be(A,bicycle)],be(A,vehicle)
[classification(iphone,smartphone),be(iphone,iphone)],be(iphone,smartphone)
[goal(bring_about(technological_innovation))],is_necessary(bring_about(technological_innovation))
[goal(this),necessary_condition(this,foster_business_friendly_environment)],is_necessary(foster_business_friendly_environment)
[goal(improving_healthcare),necessary_condition(improving_healthcare,necessary_action)],is_necessary(necessary_action)
[goal(bringing_about_transformation),necessary_condition(bringing_about_transformation,advance(machine_learning_algorithms))],is_necessary(advance(machine_learning_algorithms))
[goal(progress_cybersecurity),necessary_condition(progress_cybersecurity,required_action)],is_necessary(required_action)
[goal(make_this_reality),necessary_condition(make_this_reality,promote(energy_efficient_computing))],is_necessary(promote(energy_efficient_computing))
[goal(farming)],is_necessary(Si)
[goal(achieve(it)),necessary_condition(achieve(it),find_inspiration)],is_necessary(find_inspiration)
[goal(play_soccer)]
[goal(do_so),necessary_condition(do_so,review_chess_theory)],is_necessary(review_chess_theory)
[position_to_know(joseph,health),asserts(joseph,exercising_is_healthy),contain(health,exercising_is_healthy)],exercising_is_healthy
[classification(mathematician,scientist),be(maria,mathematician)],be(maria,scientist)
[position_to_know(emily,cell_biology),asserts(emily,has_all(eukaryotic_cells,mitochondria)),contain(cell_biology,has_all(eukaryotic_cells,mitochondria))],has_all(eukaryotic_cells,mitochondria)
[position_to_know(david,geology),asserts(david,Ar),contain(geology,Ar)],Ar
[position_to_know(james,microbiology),asserts(james,are(bacterias,unicellular_microorganisms)),contain(microbiology,are(bacterias,unicellular_microorganisms))],are(bacterias,unicellular_microorganisms)
[classification(computer_scientist,scientist),be(george,computer_scientist)],be(george,scientist)
[position_to_know(peter,oncology),asserts(peter,causes(smoking,cancer)),contain(oncology,causes(smoking,cancer))],causes(smoking,cancer)
[classification(economist,professional),be(lisa,economist)],be(lisa,professional)
[position_to_know(mark,architectural_design),asserts(mark,form_follows_function),contain(architectural_design,form_follows_function)],form_follows_function
[classification(physicist,scientist),be(john,physicist)],be(john,scientist)