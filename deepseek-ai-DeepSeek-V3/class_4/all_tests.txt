[features(laptop_nimbusBook,sleek_aluminum_body,high_resolution_retina_display,fast_charging_battery),features(laptop_nimbusBook_Pro,sleek_aluminum_body,high_resolution_retina_display,fast_charging_battery),classified(laptop_nimbusBook,W)],classified(laptop_nimbusBook_Pro,W)
[features(fitness_tracker_PulseFit,continuous_heart_rate_monitoring,advanced_sleep_analysis),features(fitness_tracker_PulseFit_X,continuous_heart_rate_monitoring,advanced_sleep_analysis),classified(fitness_tracker_PulseFit,W)],classified(fitness_tracker_PulseFit_X,W)
[features(gaming_console_vortex,high_resolution_support,ray_tracing_technology),features(gaming_console_vortex_elite,high_resolution_support,ray_tracing_technology),classified(gaming_console_vortex,premium_console)],classified(gaming_console_vortex_elite,premium_console)
[features(washing_machine_ecoWash,energy_efficient_technology,variety_of_eco_friendly_wash_cycles),features(washing_machine_ecoWash_Plus,energy_efficient_technology,variety_of_eco_friendly_wash_cycles),classified(washing_machine_ecoWash,eco_friendly_washing_machine)],classified(washing_machine_ecoWash_Plus,eco_friendly_washing_machine)
[features(tablet_novaTab,lightweight_design,responsive_AMOLED_touch_screen),features(tablet_novaTab_2,lightweight_design,responsive_AMOLED_touch_screen),classified(tablet_novaTab,premium_tablet)],classified(tablet_novaTab_2,premium_tablet)
[features(smartphone_titanX,high_resolution_camera,facial_recognition),features(smartphone_titanX_Pro,high_resolution_camera,facial_recognition),classified(smartphone_titanX,flagship_device)],classified(smartphone_titanX_Pro,flagship_device)
[features(smartwatch_chronoFit3,fitness_tracking,water_resistance),features(smartwatch_chronoFit3_Pro,fitness_tracking,water_resistance),classified(smartwatch_chronoFit3,classified_W)],classified(smartwatch_chronoFit3_Pro,classified_W)
[features(connectify,real_time_messaging,group_video_calls),features(connectify_plus,real_time_messaging,group_video_calls),classified(connectify,W)],classified(connectify_plus,W)
[features(fitTracker_3_0,real_time_workout_tracking,personalized_training_plans,social_sharing_capabilities),features(fitTracker_4_0,real_time_workout_tracking,personalized_training_plans,social_sharing_capabilities),classified(fitTracker_3_0,premium_fitness_app)],classified(fitTracker_4_0,premium_fitness_app)
[features(coffee_machine_BrewMaster,multiple_brewing_options,built_in_grinder,sleek_stainless_steel_design),features(coffee_machine_BrewMaster_Elite,multiple_brewing_options,built_in_grinder,sleek_stainless_steel_design),classified(coffee_machine_BrewMaster,premium_appliance)],classified(coffee_machine_BrewMaster_Elite,premium_appliance)
[adopt(sarah, opinion_respected_to("no manager should resort to micromanagement", "general management")), adopt(sarah, opinion_respected_to("defends her own supervisor’s habit of scrutinizing every minor detail", "her supervisor's management")), is_different("no manager should resort to micromanagement", "defends her own supervisor’s habit of scrutinizing every minor detail"), is_similar("general management", "her supervisor's management")], is_using_double_standard(sarah)
[adopt(mark, opinion_respected_to("unfair", "enforcing strict bedtimes on others' children")), adopt(mark, opinion_respected_to("adamant", "enforcing strict bedtimes on his own kids")), is_different("unfair", "adamant"), is_similar("enforcing strict bedtimes on others' children", "enforcing strict bedtimes on his own kids")], is_using_double_standard(mark)
[adopt(emily, opinion_respected_to("condemns plagiarism", "peers’ assignments")), adopt(emily, opinion_respected_to("turns a blind eye to plagiarism", "her own work")), is_different("condemns plagiarism", "turns a blind eye to plagiarism"), is_similar("peers’ assignments", "her own work")], is_using_double_standard(emily)
[adopt(daniel, opinion_respected_to("criticizes cutting corners", "client projects")), adopt(daniel, opinion_respected_to("justifies shortcuts", "own assignments")), is_different("criticizes cutting corners", "justifies shortcuts"), is_similar("client projects", "own assignments")], is_using_double_standard(daniel)
[adopt(linda, opinion_respected_to("complains about overuse of technology", "colleagues")), adopt(linda, opinion_respected_to("excuses frequent phone-checking", "herself")), is_different("complains about overuse of technology", "excuses frequent phone-checking"), is_similar("colleagues", "herself")], is_using_double_standard(linda)
[adopt(alex, opinion_respected_to("decried lying", "intimate relationships")), adopt(alex, opinion_respected_to("dismissed deceptions", "business dealings")), is_different("decried lying", "dismissed deceptions"), is_similar("intimate relationships", "business dealings")], is_using_double_standard(alex)
[adopt(michael, opinion_respected_to("must be held accountable", "large corporations waste management")), adopt(michael, opinion_respected_to("brushed aside calls for accountability", "household recycling")), is_different("must be held accountable", "brushed aside calls for accountability"), is_similar("large corporations waste management", "household recycling")], is_using_double_standard(michael)
[adopt(rachel, opinion_respected_to("lambasts noisy late-night parties", "residents")), adopt(rachel, opinion_respected_to("does not see issue", "her own home")), is_different("lambasts noisy late-night parties", "does not see issue"), is_similar("residents", "her own home")], is_using_double_standard(rachel)
[adopt(tom, opinion_respected_to("should stick to disciplined workout routine", "everyone at the gym")), adopt(tom, opinion_respected_to("flouts the regimen", "himself")), is_different("should stick to disciplined workout routine", "flouts the regimen"), is_similar("everyone at the gym", "himself")], is_using_double_standard(tom)
[adopt(lisa, opinion_respected_to("condemns aggressive marketing tactics", "competitors")), adopt(lisa, opinion_respected_to("defends aggressive marketing tactics", "her own campaigns")), is_different("condemns aggressive marketing tactics", "defends aggressive marketing tactics"), is_similar("competitors", "her own campaigns")], is_using_double_standard(lisa)
[occured(exercises_regularly(person)),followed(occured(exercises_regularly(person)),occurs(healthy(person)))],occurs(healthy(person))
[occured(invests(company,employee_training)),followed(occured(invests(company,employee_training)),improves(employee_performance))],improves(employee_performance)
[occured(followed_accurately(recipe)), followed(occured(followed_accurately(recipe)), turns_out_well(dish))], turns_out_well(dish)
[occured(collaborates_effectively(team)),followed(occured(collaborates_effectively(team)),achieves(team,goals))],achieves(team,goals)
[position_to_know(system_admin,computer_system_maintenance),asserts(system_admin,properly_maintained(computer_system)),contain(computer_system_maintenance,properly_maintained(computer_system))],properly_maintained(computer_system)
`[occured(gets_enough_sleep(person)), followed(occured(gets_enough_sleep(person)), feels_more_focused(person))], feels_more_focused(person)`
[occured(dark_clouds),followed(occured(dark_clouds),occurs(rains))],occurs(rains)
[occured(attends(student,classes_regularly)),followed(occured(attends(student,classes_regularly)),improves(student,academic_performance))],improves(student,academic_performance)
[classification(well_maintained_road,safe_road),be(the_road,well_maintained_road)],be(the_road,safe_road)
`[occured(gets_enough_sleep(someone)), followed(occured(gets_enough_sleep(someone)), improves(cognitive_performance))], improves(cognitive_performance)`
[would_help(brighter_streetlights,neighborhood),can_carry_out(city,brighter_streetlights),not_too_costly(city,brighter_streetlights)],ought_to_carry_out(city,brighter_streetlights)
[would_help(regular_exercise,your_health),can_carry_out(individuals,regular_exercise),not_too_costly(individuals,regular_exercise)],ought_to_carry_out(individuals,regular_exercise)
[would_help(reusable_bags,environment),can_carry_out(shoppers,reusable_bags),not_too_costly(shoppers,reusable_bags)],ought_to_carry_out(shoppers,reusable_bags)
[would_help(clear_instructions,students),can_carry_out(teachers,clear_instructions),not_too_costly(teachers,clear_instructions)],ought_to_carry_out(teachers,clear_instructions)
[would_help(more_recycling_bins,reduce_waste),can_carry_out(communities,more_recycling_bins),not_too_costly(communities,more_recycling_bins)],ought_to_carry_out(communities,more_recycling_bins)
[would_help(regular_check_ups,maintain_good_health),can_carry_out(doctors,regular_check_ups),not_too_costly(doctors,regular_check_ups)],ought_to_carry_out(doctors,regular_check_ups)
[would_help(improved_signage,drivers),can_carry_out(municipalities,improved_signage),not_too_costly(municipalities,improved_signage)],ought_to_carry_out(municipalities,improved_signage)
[would_help(early_education,children),can_carry_out(schools,early_education_programs),not_too_costly(schools,early_education_programs)],ought_to_carry_out(schools,early_education_programs)
[would_help(team_building_activities,workplace_relationships),can_carry_out(managers,team_building_activities),not_too_costly(managers,team_building_activities)],ought_to_carry_out(managers,team_building_activities)
[would_help(open_communication,resolve_conflicts),can_carry_out(team_members,open_communication),not_too_costly(team_members,open_communication)],ought_to_carry_out(team_members,open_communication)
[has_property(love,affection),is_opposite(love,hate)],has_property(hate,opposite_of(affection))
[is_opposite(order,chaos)]
[has_property(light,illumination),is_opposite(light,darkness)],has_property(darkness,opposite_of(illumination))
`[has_property(patience,virtuous),is_opposite(patience,impatience)],has_property(impatience,opposite_of(virtuous))`
[has_property(beauty,aesthetics),is_opposite(beauty,ugliness)],has_property(ugliness,opposite_of(aesthetics))
[has_property(progress,positive_direction),is_opposite(progress,regression)],has_property(regression,opposite_of(positive_direction))
[has_property(humility,modesty),is_opposite(humility,pride)],has_property(pride,opposite_of(modesty))
[has_property(knowledge,P),is_opposite(knowledge,ignorance)],has_property(ignorance,opposite_of(P))
[has_property(forgiveness,mercy),is_opposite(forgiveness,vengeance)],has_property(vengeance,opposite_of(mercy))
[has_property(hope,positive_emotion),is_opposite(hope,despair)],has_property(despair,opposite_of(positive_emotion))
[has_property(susan_cover_letter, vague_generalities), vague_for(vague_generalities, specificity_precision), occurs_in(susan_cover_letter, context_that_requires(specificity_precision))], should_be_rejected(susan_cover_letter)
`[has_property(dr_martin_proposal, imprecise_phrasing), vague_for(imprecise_phrasing, quantifiable_results), occurs_in(dr_martin_proposal, context_that_requires(quantifiable_results))], should_be_rejected(dr_martin_proposal)`
[has_property(new_dish, flowery_adjectives_with_omissions), vague_for(flowery_adjectives_with_omissions, ingredient_preparation_details), occurs_in(new_dish, context_that_requires(ingredient_preparation_details))], should_be_rejected(new_dish)
[has_property(carlos_essay,loosely_defined_concepts),vague_for(loosely_defined_concepts,clarity_precision),occurs_in(carlos_essay,context_that_requires(clarity_precision))],should_be_rejected(carlos_essay)
[has_property(architectural_design_proposal, ambiguous_references), vague_for(ambiguous_references, structural_parameters), occurs_in(architectural_design_proposal, context_that_requires(structural_parameters))], should_be_rejected(architectural_design_proposal)
[has_property(politician_manifesto, no_specific_policy_measures), vague_for(no_specific_policy_measures, clarity_precision), occurs_in(politician_manifesto, context_that_requires(clarity_precision))], should_be_rejected(politician_manifesto)
[has_property(clause,ambiguous_phrase),vague_for(ambiguous_phrase,precision),occurs_in(clause,context_that_requires(precision))],should_be_rejected(clause)
[has_property(software_specification_document, optimal_performance_without_metrics), vague_for(optimal_performance_without_metrics, specific_performance_metrics), occurs_in(software_specification_document, technical_review_meeting)], should_be_rejected(software_specification_document)
[has_property(critics_review, deeply_profound), vague_for(deeply_profound, analytical_insight), occurs_in(critics_review, context_that_requires(analytical_insight))], should_be_rejected(critics_review)
[has_property(marketing_slogan,vague_claim),vague_for(vague_claim,precision),occurs_in(marketing_slogan,context_that_requires(precision))],should_be_rejected(marketing_slogan)
[everybody_who_is(honest,accept(the_truth))]
[everybody_who_is(understanding,accept(understanding_behavior)),goal_of(mike,understanding)],should(mike,accept(understanding_behavior))
[everybody_who_is(patient,accept(delays)),goal_of(X,patient)],should(X,accept(delays))
[goal(olivia,be_diligent),necessary_condition(be_diligent,necessary_action)],is_necessary(necessary_action)
[everybody_who_is(optimistic,accept(challenges)),goal_of(X,optimistic)],should(X,accept(challenges))
`[goal(be(jake, resilient)), necessary_condition(be(jake, resilient), action_to_achieve_resilience)], is_necessary(action_to_achieve_resilience)`
[everybody_who_is(humble,accept(praise))]
[everybody_who_is(ambitious,accept(working_hard)),goal_of(daniel,ambitious)],should(daniel,accept(working_hard))
[everybody_who_is(tolerant,accept(diversity)),goal_of(X,tolerant)],should(X,accept(diversity))
`[goal(be(noah, optimistic)), necessary_condition(be(noah, optimistic), practice_gratitude(noah))], is_necessary(practice_gratitude(noah))`
[classification(rose,flower)],be(A,rose)
[classification(x5_model,bmw),be(x5_model,x5_model)],be(x5_model,bmw)
[classification(oak_tree,tree),be(X,oak_tree)],be(X,tree)
[classification(mystery_novel,novel),be(mystery_novels,mystery_novel)],be(mystery_novels,novel)
[classification(laptop,electronic_device),be(A,laptop)],be(A,electronic_device)
[classification(bottlenose_dolphin,dolphin),be(bottlenose_dolphin,bottlenose_dolphin)],be(bottlenose_dolphin,dolphin)
[classification(whale,mammal)]
[classification(grand_piano,piano),be(grand_piano,grand_piano)],be(grand_piano,piano)
[classification(bicycle,vehicle),be(A,bicycle)],be(A,vehicle)
[classification(iphone,smartphone),be(iphone,iphone)],be(iphone,smartphone)
[goal(bringing_about(technological_innovation)),necessary_condition(bringing_about(technological_innovation),Si)],is_necessary(Si)
[goal(achieve_objective),necessary_condition(achieve_objective,foster(business_friendly_environment))],is_necessary(foster(business_friendly_environment))
[goal(improving_healthcare),necessary_condition(improving_healthcare,_)],is_necessary(_)
[goal(bring_about(transformation)),necessary_condition(bring_about(transformation),advance(machine_learning_algorithms))],is_necessary(advance(machine_learning_algorithms))
[goal(progress_on(cybersecurity)),necessary_condition(progress_on(cybersecurity),invest_in(cybersecurity_tools))],is_necessary(invest_in(cybersecurity_tools))
[goal(make_this_reality),necessary_condition(make_this_reality,promote(energy_efficient_computing))],is_necessary(promote(energy_efficient_computing))
[goal(farming)],is_necessary(_)
[goal(achieve(it)),necessary_condition(achieve(it),find_inspiration)],is_necessary(find_inspiration)
[goal(play_soccer),necessary_condition(play_soccer,necessary_condition_for_playing_soccer)],is_necessary(necessary_condition_for_playing_soccer)
[goal(do_X),necessary_condition(do_X,review(chess_theory))],is_necessary(review(chess_theory))
[position_to_know(joseph,health),asserts(joseph,healthy(exercising)),contain(health,healthy(exercising))],healthy(exercising)
[position_to_know(maria,mathematics),asserts(maria,true_mathematical_claim),contain(mathematics,true_mathematical_claim)],true_mathematical_claim
[position_to_know(emily,biology),asserts(emily,have(eukaryotic_cells,mitochondria)),contain(biology,have(eukaryotic_cells,mitochondria))],have(eukaryotic_cells,mitochondria)
[position_to_know(david, geology)], [incomplete_argument].
[position_to_know(james,microbiology),asserts(james,are(bacterias,unicellular_microorganisms)),contain(microbiology,are(bacterias,unicellular_microorganisms))],are(bacterias,unicellular_microorganisms)
[classification(computer_scientist, scientist), be(george, computer_scientist)], be(george, scientist)
[position_to_know(peter,medicine),asserts(peter,causes(smoking,cancer)),contain(medicine,causes(smoking,cancer))],causes(smoking,cancer)
[position_to_know(lisa,economics),asserts(lisa,rise(inflation,next_year)),contain(economics,rise(inflation,next_year))],rise(inflation,next_year)
[position_to_know(mark,architectural_design),asserts(mark,form_follows_function),contain(architectural_design,form_follows_function)],form_follows_function
[position_to_know(john,physics),asserts(john,Ar),contain(physics,Ar)],Ar