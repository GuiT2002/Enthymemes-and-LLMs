[features(nimbusBook,sleek_aluminum_body,high_resolution_retina_display,fast_charging_battery),features(nimbusBook_Pro,sleek_aluminum_body,high_resolution_retina_display,fast_charging_battery),classified(nimbusBook,premium_device)],classified(nimbusBook_Pro,premium_device)
[features(fitness_tracker_PulseFit,continuous_heart_rate_monitoring,advanced_sleep_analysis),features(fitness_tracker_PulseFit_X,continuous_heart_rate_monitoring,advanced_sleep_analysis),classified(fitness_tracker_PulseFit,health_focused_device)],classified(fitness_tracker_PulseFit_X,health_focused_device)
[features(vortex,high_resolution_support,ray_tracing_technology),features(vortex_elite,high_resolution_support,ray_tracing_technology),classified(vortex,high_performance_device)],classified(vortex_elite,high_performance_device)
[features(washing_machine_EcoWash,energy_efficient_technology,variety_eco_friendly_wash_cycles),features(washing_machine_EcoWash_Plus,energy_efficient_technology,variety_eco_friendly_wash_cycles),classified(washing_machine_EcoWash,eco_friendly_appliance)],classified(washing_machine_EcoWash_Plus,eco_friendly_appliance)
[features(tablet_novaTab,lightweight_design,responsive_AMOLED_touch_screen),features(tablet_novaTab_2,lightweight_design,responsive_AMOLED_touch_screen),classified(tablet_novaTab,portable_device)],classified(tablet_novaTab_2,portable_device)
[features(smartphone_titanX,high_resolution_camera,facial_recognition),features(smartphone_titanX_Pro,high_resolution_camera,facial_recognition),classified(smartphone_titanX,premium_device)],classified(smartphone_titanX_Pro,premium_device)
[features(smartwatch_chronoFit_3,fitness_tracking,water_resistance),features(smartwatch_chronoFit_3_Pro,fitness_tracking,water_resistance),classified(smartwatch_chronoFit_3,health_oriented_device)],classified(smartwatch_chronoFit_3_Pro,health_oriented_device)
[features(connectify,real_time_messaging,group_video_calls),features(connectify_plus,real_time_messaging,group_video_calls),classified(connectify,user_friendly_communication_tool)],classified(connectify_plus,user_friendly_communication_tool)
[features(fitTracker_3_0,real_time_workout_tracking,personalized_training_plans,social_sharing_capabilities),features(fitTracker_4_0,real_time_workout_tracking,personalized_training_plans,social_sharing_capabilities),classified(fitTracker_3_0,advanced_health_tool)],classified(fitTracker_4_0,advanced_health_tool)
[features(coffee_machine_brewMaster,multiple_brewing_options,built_in_grinder,sleek_stainless_steel_design),features(coffee_machine_brewMaster_Elite,multiple_brewing_options,built_in_grinder,sleek_stainless_steel_design),classified(coffee_machine_brewMaster,premium_brewing_device)],classified(coffee_machine_brewMaster_Elite,premium_brewing_device)
[adopt(sarah, opinion_respected_to("no manager should resort to micromanagement", "managers")), adopt(sarah, opinion_respected_to("defends her own supervisor’s habit of scrutinizing every minor detail", "her own supervisor")), is_different("no manager should resort to micromanagement", "defends her own supervisor’s habit of scrutinizing every minor detail"), is_similar("managers", "her own supervisor")], is_using_double_standard(sarah)
[adopt(mark, opinion_respected_to("enforcing strict bedtimes is unfair", "others' children")), adopt(mark, opinion_respected_to("must adhere to rigid schedule", "his own kids")), is_different("enforcing strict bedtimes is unfair", "must adhere to rigid schedule"), is_similar("others' children", "his own kids")], is_using_double_standard(mark)
[adopt(emily, opinion_respected_to("condemns plagiarism", "peers’ assignments")), adopt(emily, opinion_respected_to("turns a blind eye to plagiarism", "her own work")), is_different("condemns plagiarism", "turns a blind eye to plagiarism"), is_similar("peers’ assignments", "her own work")], is_using_double_standard(emily)
[adopt(daniel, opinion_respected_to("criticizes cutting corners on quality", "client projects")), adopt(daniel, opinion_respected_to("justifies using shortcuts", "his own assignments")), is_different("criticizes cutting corners on quality", "justifies using shortcuts"), is_similar("client projects", "his own assignments")], is_using_double_standard(daniel)
[adopt(linda, opinion_respected_to("complains about overuse of technology", "colleagues during meetings")), adopt(linda, opinion_respected_to("excuses frequent phone-checking", "her own behavior")), is_different("complains about overuse of technology", "excuses frequent phone-checking"), is_similar("colleagues during meetings", "her own behavior")], is_using_double_standard(linda)
[adopt(alex, opinion_respected_to("decried lying", "intimate relationships")), adopt(alex, opinion_respected_to("dismissed deceptions", "business dealings")), is_different("decried lying", "dismissed deceptions"), is_similar("intimate relationships", "business dealings")], is_using_double_standard(alex)
[adopt(michael, opinion_respected_to("must be held accountable", "large corporations waste management")), adopt(michael, opinion_respected_to("brushed aside", "personal accountability household recycling")), is_different("must be held accountable", "brushed aside"), is_similar("large corporations waste management", "personal accountability household recycling")], is_using_double_standard(michael)
[adopt(rachel, opinion_respected_to("lambasts noisy late-night parties", "residents")), adopt(rachel, opinion_respected_to("doesn't see issue", "her own home")), is_different("lambasts noisy late-night parties", "doesn't see issue"), is_similar("residents", "her own home")], is_using_double_standard(rachel)
[adopt(tom, opinion_respected_to("should stick to disciplined workout routine", "everyone at the gym")), adopt(tom, opinion_respected_to("flouts disciplined workout routine", "himself")), is_different("should stick to disciplined workout routine", "flouts disciplined workout routine"), is_similar("everyone at the gym", "himself")], is_using_double_standard(tom)
[adopt(lisa, opinion_respected_to("condemns aggressive marketing tactics", "competitors")), adopt(lisa, opinion_respected_to("defends aggressive marketing tactics", "her own campaigns")), is_different("condemns aggressive marketing tactics", "defends aggressive marketing tactics"), is_similar("competitors", "her own campaigns")], is_using_double_standard(lisa)
[occured(exercises_regularly(person)), followed(occured(exercises_regularly(person)), physically_fit(person))], physically_fit(person)
[occured(implemented(company,training_program)),followed(occured(implemented(company,training_program)),improves(employee_performance))],improves(employee_performance)
[occured(followed_recipe_precisely(chef)), followed(occured(followed_recipe_precisely(chef)), turn_out_delicious(dish))], turn_out_delicious(dish).
[goal(their_goals), necessary_condition(their_goals, some_action)], is_necessary(some_action).
[occured(system_well_maintained), followed(occured(system_well_maintained), occurs(run_smoothly))], occurs(run_smoothly)
[occured(drank_coffee),followed(occured(drank_coffee),feel_more_focused)],feel_more_focused
[occured(rain),followed(occured(rain),occurs(wet_streets))],occurs(wet_streets)
[occured(attended(students, extra_tutoring_sessions)), followed(occured(attended(students, extra_tutoring_sessions)), improves(students, academic_performance))], improves(students, academic_performance)
[occured(synchronized(traffic_lights)), followed(occured(synchronized(traffic_lights)), smoother(traffic_flow))], smoother(traffic_flow)
[occured(action_X),followed(occured(action_X),improves(cognitive_performance))],improves(cognitive_performance)
[would_help(brighter_streetlights,city_residents),can_carry_out(city,brighter_streetlights),not_too_costly(city,brighter_streetlights)],ought_to_carry_out(city,brighter_streetlights)
[would_help(regular_exercise,health),can_carry_out(individuals,regular_exercise),not_too_costly(individuals,regular_exercise)],ought_to_carry_out(individuals,regular_exercise)
[would_help(reusable_bags,environment),can_carry_out(shoppers,reusable_bags),not_too_costly(shoppers,reusable_bags)],ought_to_carry_out(shoppers,reusable_bags)
[would_help(clear_instructions,students),can_carry_out(teachers,clear_instructions),not_too_costly(teachers,clear_instructions)],ought_to_carry_out(teachers,clear_instructions)
[would_help(more_recycling_bins,reduce_waste),can_carry_out(communities,more_recycling_bins),not_too_costly(communities,more_recycling_bins)],ought_to_carry_out(communities,more_recycling_bins)
[would_help(regular_check_ups,patients),can_carry_out(doctors,regular_check_ups),not_too_costly(doctors,regular_check_ups)],ought_to_carry_out(doctors,regular_check_ups)
[would_help(improved_signage,public_safety),can_carry_out(municipalities,improved_signage),not_too_costly(municipalities,improved_signage)],ought_to_carry_out(municipalities,improved_signage)
[would_help(early_education,children),can_carry_out(schools,early_education),not_too_costly(schools,early_education)],ought_to_carry_out(schools,early_education)
[would_help(team_building_activities,employees),can_carry_out(managers,team_building_activities),not_too_costly(managers,team_building_activities)],ought_to_carry_out(managers,team_building_activities)
[would_help(open_communication,team),can_carry_out(team_members,open_communication),not_too_costly(team_members,open_communication)],ought_to_carry_out(team_members,open_communication)
[has_property(affection,positive),is_opposite(affection,hatred)],has_property(hatred,opposite_of(positive))
[has_property(order,organization),is_opposite(order,chaos)],has_property(chaos,opposite_of(organization))
[has_property(light,illumination),is_opposite(light,darkness)],has_property(darkness,opposite_of(illumination))
[has_property(patience,endurance),is_opposite(patience,impatience)],has_property(impatience,opposite_of(endurance))
[has_property(beauty,aesthetics),is_opposite(beauty,ugliness)],has_property(ugliness,opposite_of(aesthetics))
[has_property(progress,development),is_opposite(progress,regression)],has_property(regression,opposite_of(development))
[has_property(modesty,modesty),is_opposite(modesty,arrogance)],has_property(arrogance,opposite_of(modesty))
[has_property(understanding,understanding),is_opposite(understanding,ignorance)],has_property(ignorance,opposite_of(understanding))
[is_opposite(vengeance,mercy)],has_property(vengeance,opposite_of(mercy)).  [has_property(mercy,forgiveness),is_opposite(vengeance,mercy)],has_property(vengeance,opposite_of(forgiveness)).
[has_property(hope,optimism),is_opposite(hope,despair)],has_property(despair,opposite_of(optimism))
[has_property(susan_cover_letter, vague_generalities), vague_for(vague_generalities, measurable_accomplishments), occurs_in(susan_cover_letter, context_that_requires(measurable_accomplishments))], should_be_rejected(susan_cover_letter)
[has_property(dr_martin_proposal, imprecise_phrasing), vague_for(imprecise_phrasing, precise_quantifiable_results), occurs_in(dr_martin_proposal, context_that_requires(precise_quantifiable_results))], should_be_rejected(dr_martin_proposal)
[has_property(new_dish, flowery_adjectives), vague_for(flowery_adjectives, key_ingredients_preparation_details), occurs_in(new_dish, context_that_requires(key_ingredients_preparation_details))], should_be_rejected(new_dish)
[has_property(carlos_essay, loosely_defined_concepts), vague_for(loosely_defined_concepts, solid_explanations), occurs_in(carlos_essay, context_that_requires(solid_explanations))], should_be_rejected(carlos_essay)
[has_property(architectural_design_proposal, ambiguous_references), vague_for(ambiguous_references, structural_parameters), occurs_in(architectural_design_proposal, context_that_requires(structural_parameters))], should_be_rejected(architectural_design_proposal)
[has_property(politician_manifesto,lacks_specific_policy_measures),vague_for(lacks_specific_policy_measures,specificity),occurs_in(politician_manifesto,context_that_requires(specificity))],should_be_rejected(politician_manifesto)
[has_property(legal_contract_clause, ambiguous_phrase), vague_for(ambiguous_phrase, precise_language), occurs_in(legal_contract_clause, context_that_requires(precise_language))], should_be_rejected(legal_contract_clause)
[has_property(software_specification_document, optimal_performance_without_metrics), vague_for(optimal_performance_without_metrics, detailed_metrics), occurs_in(software_specification_document, context_that_requires(detailed_metrics))], should_be_rejected(software_specification_document)
[has_property(critic_review_modern_sculpture, deeply_profound_without_analytical_insight), vague_for(deeply_profound_without_analytical_insight, clarity_precision), occurs_in(critic_review_modern_sculpture, context_that_requires(clarity_precision))], should_be_rejected(critic_review_modern_sculpture)
[has_property(marketing_slogan, "best_ever"), vague_for("best_ever", substantiation), occurs_in(marketing_slogan, context_that_requires(substantiation))], should_be_rejected(marketing_slogan)
[everybody_who_is(honest,accept(truth)),goal_of(emily,honest)],should(emily,accept(truth))
[everybody_who_is(open_minded,accept(different_opinions)),goal_of(mike,open_minded)],should(mike,accept(different_opinions))
[everybody_who_is(patient,accept(delays)),goal_of(maria,patient)],should(maria,accept(delays))
[everybody_who_is(successful,accept(hard_work)),goal_of(olivia,successful)],should(olivia,accept(hard_work))
[everybody_who_is(resilient,accept(challenges)),goal_of(mia,resilient)],should(mia,accept(challenges))
[everybody_who_is(resilient,accept(setbacks)),goal_of(jake,resilient)],should(jake,accept(setbacks))
[everybody_who_is(gracious,accept(praise)),goal_of(sophia,gracious)],should(sophia,accept(praise))
[everybody_who_is(successful,accept(hard_work)),goal_of(daniel,successful)],should(daniel,accept(hard_work))
[everybody_who_is(compassionate,accept(diversity)),goal_of(lily,compassionate)],should(lily,accept(diversity))
[everybody_who_is(wise,accept(uncertainties)),goal_of(noah,wise)],should(noah,accept(uncertainties))
[classification(rose,flower),be(red_rose,rose)],be(red_rose,flower)
[classification(suv,car),be(x5,suv)],be(x5,car)
[classification(oak,tree),be(giant_oak_park,oak)],be(giant_oak_park,tree)
[classification(novel,book),be(mystery_novels,novel)],be(mystery_novels,book)
[classification(laptop,electronic_device),be(macbook,laptop)],be(macbook,electronic_device)
[classification(dolphin,marine_mammal),be(bottlenose_dolphin,dolphin)],be(bottlenose_dolphin,marine_mammal)
[classification(whale,mammal),be(killer_whale,whale)],be(killer_whale,mammal)
[classification(piano,musical_instrument),be(grand_piano,piano)],be(grand_piano,musical_instrument)
[classification(bicycle,vehicle),be(mountain_bikes,bicycle)],be(mountain_bikes,vehicle)
[classification(smartphone,electronic_device),be(iPhone,smartphone)],be(iPhone,electronic_device)
[goal(achieve_technological_advancement),necessary_condition(achieve_technological_advancement,increased_investment(research_and_development))],is_necessary(increased_investment(research_and_development))
[goal(achieve_economic_growth),necessary_condition(achieve_economic_growth,foster(business_friendly_environment))],is_necessary(foster(business_friendly_environment))
[goal(improve_public_health),necessary_condition(improve_public_health,expand_healthcare_infrastructure)],is_necessary(expand_healthcare_infrastructure)
[goal(improve_ai_capabilities),necessary_condition(improve_ai_capabilities,advance_machine_learning_algorithms)],is_necessary(advance_machine_learning_algorithms)
[goal(secure_data),necessary_condition(secure_data,implement(robust_encryption_protocols))],is_necessary(implement(robust_encryption_protocols))
[goal(reduce_carbon_emissions(tech_industry)), necessary_condition(reduce_carbon_emissions(tech_industry), promote(energy_efficient_computing))], is_necessary(promote(energy_efficient_computing))
[goal(achieve_water_efficiency),necessary_condition(achieve_water_efficiency,invest(smart_irrigation))],is_necessary(invest(smart_irrigation))
[goal(achieve_creativity),necessary_condition(achieve_creativity,find_inspiration)],is_necessary(find_inspiration)
[goal(win_competition), necessary_condition(win_competition, train_hard)], is_necessary(train_hard)
[goal(improve_chess_skills),necessary_condition(improve_chess_skills,review_chess_theory)],is_necessary(review_chess_theory)
[position_to_know(joseph,health_knowledge),asserts(joseph,healthy(exercising)),contain(health_knowledge,healthy(exercising))],healthy(exercising)
[position_to_know(maria,mathematics),asserts(maria,subset(real_numbers,complex_numbers)),contain(mathematics,subset(real_numbers,complex_numbers))],subset(real_numbers,complex_numbers)
[position_to_know(emily,cell_biology),asserts(emily,have(all_eukaryotic_cells,mitochondria)),contain(cell_biology,have(all_eukaryotic_cells,mitochondria))],have(all_eukaryotic_cells,mitochondria)
[position_to_know(david,geology),asserts(david,expel(volcanoes,lava)),contain(geology,expel(volcanoes,lava))],expel(volcanoes,lava)
[position_to_know(james,biology), asserts(james,unicellular_microorganisms(bacterias)), contain(biology,unicellular_microorganisms(bacterias))], unicellular_microorganisms(bacterias)
[position_to_know(george,computer_science),asserts(george,secures(cryptography,data)),contain(computer_science,secures(cryptography,data))],secures(cryptography,data)
[position_to_know(peter,medicine_science),asserts(peter,causes(smoking,cancer)),contain(medicine_science,causes(smoking,cancer))],causes(smoking,cancer)
[position_to_know(lisa,economics),asserts(lisa,influences(supply_and_demand_dynamics,market_prices)),contain(economics,influences(supply_and_demand_dynamics,market_prices))],influences(supply_and_demand_dynamics,market_prices)
[position_to_know(mark,architectural_design),asserts(mark,form_follows_function_in_architectural_design),contain(architectural_design,form_follows_function_in_architectural_design)],form_follows_function_in_architectural_design
[position_to_know(john,physics),asserts(john,spin(black_holes)),contain(physics,spin(black_holes))],spin(black_holes)